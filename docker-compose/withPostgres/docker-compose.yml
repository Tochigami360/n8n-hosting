version: '3.8'

volumes:
  db_storage:
  n8n_storage:

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
        # n8n WebSocket Configuration
      - N8N_HOST: 0.0.0.0
      - N8N_PORT: 5678
      - N8N_PROTOCOL: https
      - WEBHOOK_URL: https://ai.hitogami.com
      
      # Fix deprecation warnings from logs
      - N8N_RUNNERS_ENABLED: true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
      
      # Security for HTTPS
      - N8N_SECURE_COOKIE: true
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    labels:
      - traefik.http.middlewares.n8n-websocket.headers.customRequestHeaders.Connection=upgrade
      - traefik.http.middlewares.n8n-websocket.headers.customRequestHeaders.Upgrade=websocket
      - traefik.http.middlewares.n8n-websocket.headers.customRequestHeaders.Sec-WebSocket-Extensions=permessage-deflate
    depends_on:
      postgres:
        condition: service_healthy
